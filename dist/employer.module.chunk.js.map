{"version":3,"sources":["./src/app/employer/account-settings/account-settings.component.css","./src/app/employer/account-settings/account-settings.component.html","./src/app/employer/account-settings/account-settings.component.ts","./src/app/employer/buy-carrots/buy-carrots.component.css","./src/app/employer/buy-carrots/buy-carrots.component.html","./src/app/employer/buy-carrots/buy-carrots.component.ts","./src/app/employer/buy-carrots/buy-carrots.service.ts","./src/app/employer/employee-management/employee-management.component.css","./src/app/employer/employee-management/employee-management.component.html","./src/app/employer/employee-management/employee-management.component.ts","./src/app/employer/employee-profile/employee-profile.component.css","./src/app/employer/employee-profile/employee-profile.component.html","./src/app/employer/employee-profile/employee-profile.component.ts","./src/app/employer/employer-details/employer-details.component.css","./src/app/employer/employer-details/employer-details.component.html","./src/app/employer/employer-details/employer-details.component.ts","./src/app/employer/employer.module.ts","./src/app/employer/farm-carrots/farm-carrots.component.css","./src/app/employer/farm-carrots/farm-carrots.component.html","./src/app/employer/farm-carrots/farm-carrots.component.ts","./src/app/employer/invite-employees/invite-employees.component.css","./src/app/employer/invite-employees/invite-employees.component.html","./src/app/employer/invite-employees/invite-employees.component.ts","./src/app/employer/job-add-edit/job-add-edit.component.css","./src/app/employer/job-add-edit/job-add-edit.component.html","./src/app/employer/job-add-edit/job-add-edit.component.ts","./src/app/employer/job-management/job-management.component.css","./src/app/employer/job-management/job-management.component.html","./src/app/employer/job-management/job-management.component.ts","./src/app/employer/job-overview/job-overview.component.html","./src/app/employer/job-overview/job-overview.component.scss","./src/app/employer/job-overview/job-overview.component.ts","./src/app/employer/job/job.component.css","./src/app/employer/job/job.component.html","./src/app/employer/job/job.component.ts","./src/app/employer/notifications/notifications.component.css","./src/app/employer/notifications/notifications.component.html","./src/app/employer/notifications/notifications.component.ts","./src/app/employer/review-employees/review-employees.component.css","./src/app/employer/review-employees/review-employees.component.html","./src/app/employer/review-employees/review-employees.component.ts"],"names":[],"mappings":"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","file":"employer.module.chunk.js","sourcesContent":["module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/employer/account-settings/account-settings.component.css\n// module id = ./src/app/employer/account-settings/account-settings.component.css\n// module chunks = employer.module","module.exports = \"<div class=\\\"content\\\">\\n  <div class=\\\"clearfix\\\"></div>\\n  <div class=\\\"container-fluid\\\">\\n    <p>\\n      <span class=\\\"medium strong\\\">Account Settings</span>\\n    </p>\\n    <div class=\\\"card pad20\\\">\\n      <form class=\\\"form-horizontal\\\" (ngSubmit)=\\\"saveAccountSettings(curruntUserDetails)\\\" #verify=\\\"ngForm\\\">\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"control-label col-sm-2 small\\\">FIRST NAME</label>\\n          <div class=\\\"col-sm-10\\\">\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Enter first name\\\" name=\\\"firstName\\\" [(ngModel)]=\\\"curruntUserDetails['firstName']\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"control-label col-sm-2 small\\\">LAST NAME</label>\\n          <div class=\\\"col-sm-10\\\">\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Enter last name\\\" name=\\\"lastName\\\" [(ngModel)]=\\\"curruntUserDetails['lastName']\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"control-label col-sm-2 small\\\">EMAIL</label>\\n          <div class=\\\"col-sm-10\\\">\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Enter email\\\" name=\\\"email\\\" [(ngModel)]=\\\"curruntUserDetails['email']\\\" required=\\\"\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"control-label col-sm-2 small\\\">COMPANY NAME</label>\\n          <div class=\\\"col-sm-10\\\">\\n            <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Enter your company name\\\" name=\\\"companyName\\\" [(ngModel)]=\\\"curruntUserDetails['companyName']\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"control-label col-sm-2 small\\\">PROFILE PIC</label>\\n          <div class=\\\"col-sm-10\\\">\\n            <input class=\\\"form-control\\\" type=\\\"file\\\" name=\\\"profilePic\\\" (change)=\\\"fileSelected($event)\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"col-sm-2\\\" for=\\\"password\\\">Password</label>\\n          <div class=\\\"col-sm-10\\\">\\n            <input class=\\\"form-control\\\" id=\\\"password\\\" type=\\\"password\\\" placeholder=\\\"Password\\\" name=\\\"password\\\" [(ngModel)]=\\\"curruntUserDetails['password']\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"col-sm-2\\\" for=\\\"password-repeat\\\">Password Confirmation</label>\\n          <div class=\\\"col-sm-10\\\">\\n            <input class=\\\"form-control\\\" id=\\\"password-repeat\\\" type=\\\"password\\\" placeholder=\\\"Re-enter Password\\\" name=\\\"passwordConf\\\" [(ngModel)]=\\\"curruntUserDetails['passwordConf']\\\">\\n          </div>\\n        </div>\\n        <button class=\\\"btn-lg btn-warning pull-right\\\" type=\\\"submit\\\">Save</button>\\n      </form>\\n      <br>\\n      <br>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/employer/account-settings/account-settings.component.html\n// module id = ./src/app/employer/account-settings/account-settings.component.html\n// module chunks = employer.module","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../user-service.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-account-settings',\n  templateUrl: './account-settings.component.html',\n  styleUrls: ['./account-settings.component.css']\n})\nexport class AccountSettingsComponent implements OnInit {\n  public curruntUserDetails : object = {};\n  public file : File;\n  constructor(public userService:UserService, private router : Router) { \n    userService.userDetail.subscribe(user=>{\n      this.curruntUserDetails = Object.assign({},user);\n    })\n  }\n\n  public fileSelected($event){\n    this.file = $event.target.files ? $event.target.files[0] : null;\n  }\n\n  public saveAccountSettings(curruntUserDetails){\n    let payload = new FormData();\n    for(let property in curruntUserDetails){\n      payload.append(property, curruntUserDetails[property]);\n    }\n    if(this.file){\n      payload.append('profilePic', this.file, this.file['name'])\n    }\n    this.userService.saveProfile(payload, 'employer').subscribe(res => {\n      console.log('robot ',res);\n      this.router.navigate(['employer/overview'])\n    });\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/employer/account-settings/account-settings.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/employer/buy-carrots/buy-carrots.component.css\n// module id = ./src/app/employer/buy-carrots/buy-carrots.component.css\n// module chunks = employer.module","module.exports = \"<div class=\\\"content\\\">\\n  <div class=\\\"clearfix\\\"></div>\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"content-wrap\\\" [hidden]=\\\"showCard\\\">\\n      <div class=\\\"align-center\\\">\\n        <img class=\\\"left20\\\" height=\\\"60\\\" length=\\\"60\\\" src=\\\"assets/img/carrot.png\\\">\\n        <h3 class=\\\"strong\\\">Purchase Carrots</h3>\\n        <div class=\\\"medium\\\">Price points designed for anyone, choose the plan that fits your hiring strategy</div>\\n      </div>\\n      <br>\\n      <br>\\n      <br>\\n      <div class=\\\"row\\\" [hidden]=\\\"showCard\\\">\\n        <div class=\\\"col-md-4\\\">\\n          <div class=\\\"panel align-center pad20\\\">\\n            <strong>PROFESSIONAL</strong>\\n            <div class=\\\"large strong\\\">$350</div>\\n            <br>\\n            <p>For the employers with huge positions to fill with strict deadlines</p>\\n            <br>\\n            <p class=\\\"strong\\\">1000 carrots</p>\\n            <p>0.35¢ per carrot</p>\\n            <br>\\n            <button (click)=\\\"buyNow('PROFESSIONAL')\\\" class=\\\"btn btn-green\\\">Buy now</button>\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-4\\\" style=\\\"margin-top: -30px;\\\">\\n          <div class=\\\"panel align-center pad20\\\">\\n            <strong class=\\\"green\\\">VALUE</strong>\\n            <div class=\\\"large strong\\\">$90</div>\\n            <br>\\n            <p>For the employers who have multiple positions to fill</p>\\n            <br>\\n            <p class=\\\"strong\\\">200 carrots</p>\\n            <p>0.45¢ per carrot</p>\\n            <br>\\n            <button (click)=\\\"buyNow('VALUE')\\\" class=\\\"btn btn-green\\\">Buy now</button>\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-4\\\">\\n          <div class=\\\"panel align-center pad20\\\">\\n            <strong>CASUAL</strong>\\n            <div class=\\\"large strong\\\">$25</div>\\n            <br>\\n            <p>Good for one time hires without deadlines</p>\\n            <br>\\n            <p class=\\\"strong\\\">50 carrots</p>\\n            <p>0.50¢ per carrot</p>\\n            <br>\\n            <button (click)=\\\"buyNow('CASUAL')\\\" class=\\\"btn btn-green\\\">Buy now</button>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"align-center\\\">\\n        <p class=\\\"medium\\\">For custom pricing for bulk orders, please tell us your quantity through our contact form</p>\\n        <a class=\\\"btn btn-orange\\\" href=\\\"/contact\\\">Contact us</a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n<!-- <div class=\\\"div\\\">\\n  <div id=\\\"dropin-container\\\"></div>\\n  <button id=\\\"submit-button\\\" type=\\\"button\\\">SUBMIT</button>\\n</div> -->\\n<!-- <form>\\n  <div id=\\\"dropin-container\\\"></div>\\n</form> -->\\n\\n<!-- <div id=\\\"dropin-container\\\"></div>\\n<form id=\\\"checkout-form\\\">\\n  <input type='submit' value='Pay'/>\\n</form> -->\\n<div id=\\\"dropin-container\\\"></div>\\n<!-- <div id=\\\"paypal-container\\\"></div> -->\\n<!-- <div id=\\\"paypal-container\\\"></div> -->\\n<!-- <button id=\\\"paypal-button\\\"></button> -->\\n<button id=\\\"submit-button\\\">Request payment method</button>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/employer/buy-carrots/buy-carrots.component.html\n// module id = ./src/app/employer/buy-carrots/buy-carrots.component.html\n// module chunks = employer.module","import { Component, OnInit } from '@angular/core';\nimport { ToasterModule, ToasterContainerComponent, ToasterService } from './../../../../node_modules/angular5-toaster/angular5-toaster';\nimport { Router } from '@angular/router';\nimport { BuyCarrotsService } from './buy-carrots.service';\nimport { UserService } from '../../user-service.service'\ndeclare var braintree: any;\ndeclare var paypal: any;\n// var dropin = require('braintree-web-drop-in');\n\n@Component({\n  selector: 'app-buy-carrots',\n  templateUrl: './buy-carrots.component.html',\n  styleUrls: ['./buy-carrots.component.css']\n})\n\nexport class BuyCarrotsComponent implements OnInit {\n  public clientToken = '';\n  public showCard: boolean = false;\n  private self = this;\n  constructor(public toasterService: ToasterService, private router: Router, private buyCarrotsService: BuyCarrotsService, private UserService : UserService) { }\n\n  ngOnInit() {\n    this.buyCarrotsService.clientToken().subscribe(res => {\n      console.log('res', res);\n      this.clientToken = res.clientToken;\n    }, err => {\n      console.log('err', err);\n    });\n  }\n\n  buyNow(planType) {\n    let self = this;\n    console.log(planType);\n\n    // braintree.dropin.create({\n    //   authorization: this.clientToken,\n    //   container: '#dropin-container',\n    //   paypal: {\n    //     container: \"paypal-button\"\n    //   }\n    // }, function (err, clientInstance) {\n    //   console.log('err', err);\n    //   self.showCard = true;   \n    //   console.log('clientInstance', clientInstance);\n    // });\n\n    // braintree.setup(this.clientToken, 'dropin', {\n    //   container: 'dropin-container',\n    //   paypal: {\n    //     singleUse: true,\n    //     amount: 10.00,\n    //     currency: 'USD'\n    //   }\n    // });\n\n    let plan = [\n      {\n        planType: 'PROFESSIONAL',\n        amount: 350.00,\n        carrots: 1000\n      },\n      {\n        planType: 'VALUE',\n        amount: 90.00,\n        carrots: 200\n      },\n      {\n        planType: 'CASUAL',\n        amount: 25.00,\n        carrots: 50\n      }\n    ];\n\n    let selectedPlan = plan.filter(function (obj) {\n      return obj.planType === planType;\n    });\n    let newSelectedPlan;\n    if (selectedPlan && Array.isArray(selectedPlan) && selectedPlan.length > 0) {\n      newSelectedPlan = selectedPlan[0].amount;\n    }\n\n    console.log('newSelectedPlan', newSelectedPlan);\n    self.showCard = true;\n    let button = document.querySelector('#submit-button');\n    braintree.dropin.create({\n      authorization: this.clientToken,\n      container: '#dropin-container',\n      // paypal: {\n      //   container: \"paypal-button\"\n      // },\n      paypalCredit: {\n        flow: 'checkout',\n        amount: newSelectedPlan,\n        currency: 'SGD'\n      }\n    }, function (createErr, instance) {\n      button.addEventListener('click', function () {\n        instance.requestPaymentMethod(function (requestPaymentMethodErr, payload) {\n          console.log('requestPaymentMethodErr', requestPaymentMethodErr);\n          console.log('paylaod', payload);\n          // Submit payload.nonce to your server\n          if (payload) {\n            let data = {\n              payment_method_nonce: payload.nonce,\n              planType: planType\n            }\n            console.log('data', data);\n            self.buyCarrotsService.checkout(data).subscribe(res => {\n              if (res) {\n                console.log('res', res);\n                self.UserService.getUserSettings('employer');\n              }\n            }, err => {\n              console.log('err', err);\n            });\n          } else {\n            console.log('requestPaymentMethodErr', requestPaymentMethodErr);\n          }\n        });\n      });\n    });\n\n\n    // paypal.Button.render({\n    //   braintree: braintree,\n    //   client: {\n    //     // production: 'CLIENT_TOKEN_FROM_SERVER',\n    //     sandbox: this.clientToken\n    //   },\n    //   env: 'sandbox', // or 'sandbox' 'production'\n    //   commit: true,\n    //   payment: function (data, actions) {\n    //     return actions.braintree.create({\n    //       flow: 'checkout',\n    //       amount: newSelectedPlan,\n    //       currency: 'USD'\n    //     });\n    //   },\n    //   onAuthorize: function (payload) {\n    //     console.log('payload', payload);\n    //     // Submit `payload.nonce` to your server.\n    //   },\n    // }, '#paypal-button');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/employer/buy-carrots/buy-carrots.component.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Http, Response } from '@angular/http';\nimport { CommonServiceService } from '../../common/common-service.service';\n@Injectable()\nexport class BuyCarrotsService {\n\n  constructor(private http: Http, private commonServiceService: CommonServiceService) {\n\n  }\n  public clientToken() {\n    return this.commonServiceService.get('/employer/payment')\n      .map(res => res.json())\n      .catch(this.handleError);\n  }\n\n  public checkout(data) {\n    return this.commonServiceService.post('/employer/payment/checkout', data)\n      .map(res => res.json())\n      .catch(this.handleError);\n  }\n\n  handleError(error: Response | any) {\n    const body = JSON.parse(JSON.stringify(error)) || '';\n    return Observable.throw(body);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/employer/buy-carrots/buy-carrots.service.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/employer/employee-management/employee-management.component.css\n// module id = ./src/app/employer/employee-management/employee-management.component.css\n// module chunks = employer.module","module.exports = \"<div class=\\\"content\\\">\\n  <div class=\\\"clearfix\\\"></div>\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"content-wrap\\\">\\n      <div class=\\\"panel pad10\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-5\\\">\\n            <div class=\\\"large strong\\\">Employee Management</div>\\n          </div>\\n          <div class=\\\"col-md-7\\\">\\n            <form class=\\\"form-inline\\\" action=\\\"/employer/workers\\\" method=\\\"get\\\">\\n              <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"jobId\\\" placeholder=\\\"Search by job ID\\\">\\n              <button class=\\\"form-control\\\" type=\\\"submit\\\">\\n                <i class=\\\"fa fa-search\\\"></i>\\n              </button>\\n            </form>\\n          </div>\\n        </div>\\n        <p>Please enter Job Id to search</p>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/employer/employee-management/employee-management.component.html\n// module id = ./src/app/employer/employee-management/employee-management.component.html\n// module chunks = employer.module","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-employee-management',\n  templateUrl: './employee-management.component.html',\n  styleUrls: ['./employee-management.component.css']\n})\nexport class EmployeeManagementComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/employer/employee-management/employee-management.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/employer/employee-profile/employee-profile.component.css\n// module id = ./src/app/employer/employee-profile/employee-profile.component.css\n// module chunks = employer.module","module.exports = \"<div class=\\\"content\\\">\\n  <div class=\\\"clearfix\\\"></div>\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"content-wrap\\\">\\n      <div class=\\\"panel pad20\\\">\\n        <p>\\n          <strong class=\\\"large\\\">Employee Profile</strong>\\n        </p>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-3\\\">\\n            <div class=\\\"align-center\\\">\\n              <img class=\\\"img-fit img-circle\\\" src=\\\"https://scontent.xx.fbcdn.net/v/t31.0-1/16826009_10210205090476919_3964334241175919633_o.jpg?oh=e1a767f01a354528293ea31e8d9ae5fb&amp;oe=59A18FFC\\\"\\n                height=\\\"100\\\" width=\\\"100\\\">\\n              <br>\\n              <br>\\n              <div class=\\\"strong capitalize\\\">Gary Lim</div>\\n              <p class=\\\"green strong\\\"> $undefined</p>\\n              <p class=\\\"strong\\\">male</p>\\n              <strong class=\\\"gray\\\">EXPERIENCE</strong>\\n              <p class=\\\"strong\\\">2 years</p>\\n              <br>\\n              <strong class=\\\"gray\\\">LANGUAGE</strong>\\n              <p class=\\\"strong\\\">English,Mandarin</p>\\n              <br>\\n              <strong class=\\\"gray\\\">SAVINGS</strong>\\n              <p>You save $10 when you hire Gary Lim with his expected salary.</p>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"pad20\\\">\\n              <h5 class=\\\"strong\\\">About Me</h5>\\n              <p>Entrepreneur</p>\\n              <br>\\n              <h5 class=\\\"strong\\\">Job Experience</h5>\\n              <strong>Project Manager @ Vendermac</strong>\\n              <p class=\\\"gray\\\">Plan and Manage Events, Lead the salesforce to achieve yearly targets</p>\\n              <strong>Project Manager @ Vendermac</strong>\\n              <p class=\\\"gray\\\">Lead team of 5 people to achieve Event sales target of 700k within a week</p>\\n              <br>\\n              <h5 class=\\\"strong\\\">Personality Metrics</h5>\\n              <h5 class=\\\"strong red\\\">Driver</h5>\\n              <p>The Driver is a high achiever – a mover and shaker who is definitely not averse to risk. The individual is\\n                extroverted, strong-willed, direct, practical, organised, forceful, and decisive. Look for someone who tells\\n                it the way it is and is very persuasive. Watch out or you’ll be worn down and bowled over. A driver is task-\\n                rather than relationship-oriented and wants immediate results.</p>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-3\\\">\\n            <div class=\\\"border-left align-center\\\">\\n              <i class=\\\"fa fa-3x fa-lock\\\"></i>\\n              <p class=\\\"medium strong\\\">Contact Information</p>\\n              <div class=\\\"pad20\\\">\\n                <h6 class=\\\"gray\\\">HANDPHONE NUMBER</h6>\\n                <p>Locked</p>\\n                <h6 class=\\\"gray\\\">EMAIL ADDRESS</h6>\\n                <p>Locked</p>\\n                <br>\\n                <p class=\\\"strong\\\">How to unlock?</p>\\n                <p class=\\\"gray\\\">Gary Lim's contact will only be unlocked when he accepts your invitation</p>\\n                <p class=\\\"gray\\\">Only 1 carrot will be deducted for each invite</p>\\n                <p class=\\\"gray\\\">Remaining carrots will be deducted when Gary accepts your invite</p>\\n                <p class=\\\"strong\\\">Invite Gary with</p>\\n              </div>\\n              <div class=\\\"pad20\\\">\\n                <p class=\\\"badge-green\\\">Applied</p>\\n                <a class=\\\"btn btn-yellow btn-block\\\" href=\\\"/api/matches/update/5a76ca6da17df86089e47c0c?matchStatus=shortlisted\\\">Shortlist</a>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-1\\\">\\n            <h5>\\n              <i class=\\\"fa fa-3x fa-lightbulb-o\\\"></i>\\n            </h5>\\n          </div>\\n          <div class=\\\"col-md-11\\\">\\n            <h5 class=\\\"strong gray\\\">PRO-TIP</h5>\\n            <div>Employees are also uncertain about Jobs as employers.</div>\\n            <div>Upload a profile picture and company logo to increase your credibility</div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/employer/employee-profile/employee-profile.component.html\n// module id = ./src/app/employer/employee-profile/employee-profile.component.html\n// module chunks = employer.module","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-employee-profile',\n  templateUrl: './employee-profile.component.html',\n  styleUrls: ['./employee-profile.component.css']\n})\nexport class EmployeeProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/employer/employee-profile/employee-profile.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/employer/employer-details/employer-details.component.css\n// module id = ./src/app/employer/employer-details/employer-details.component.css\n// module chunks = employer.module","module.exports = \"<div class=\\\"content\\\">\\n  <div class=\\\"clearfix\\\"></div>\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"content-wrap\\\">\\n      <p>\\n        <span class=\\\"large strong\\\">Employer Profile</span>\\n      </p>\\n      <div class=\\\"col-md-12\\\">\\n        <div class=\\\"row card pad20\\\">\\n          <div class=\\\"col-md-3\\\">\\n            <div class=\\\"align-center\\\">\\n              <img class=\\\"img-thumbnail\\\" height=\\\"75\\\" width=\\\"75\\\" [src]=\\\"'assets/img/logo.png'\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-9\\\">\\n            <h3 class=\\\"strong capitalize\\\">N/A</h3>\\n            <p class=\\\"medium strong\\\">Email</p>\\n            <p>test@me.com</p>\\n            <p class=\\\"medium strong\\\">Company Name</p>\\n            <p>N/A</p>\\n            <p class=\\\"medium strong\\\">Date Joined</p>\\n            <p>01/05/2018</p>\\n            <p class=\\\"medium strong\\\">Jobs Created</p>\\n            <p>0</p>\\n            <p class=\\\"medium strong\\\">Invitations Sent</p>\\n            <p>0</p>\\n            <p class=\\\"medium strong\\\">Employees Shortlisted</p>\\n            <p>0</p>\\n            <p class=\\\"medium strong\\\">Carrots</p>\\n            <p>Total : 100</p>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/employer/employer-details/employer-details.component.html\n// module id = ./src/app/employer/employer-details/employer-details.component.html\n// module chunks = employer.module","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-employer-details',\n  templateUrl: './employer-details.component.html',\n  styleUrls: ['./employer-details.component.css']\n})\nexport class EmployerDetailsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/employer/employer-details/employer-details.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { JobOverviewComponent } from './job-overview/job-overview.component';\nimport { JobManagementComponent } from './job-management/job-management.component';\nimport { EmployeeManagementComponent } from './employee-management/employee-management.component';\nimport { BuyCarrotsComponent } from './buy-carrots/buy-carrots.component';\nimport { FarmCarrotsComponent } from './farm-carrots/farm-carrots.component';\nimport { BuyCarrotsService } from './buy-carrots/buy-carrots.service';\nimport { JobComponent } from './job/job.component';\nimport { FormsModule } from '@angular/forms';\nimport { AccountSettingsComponent } from './account-settings/account-settings.component';\nimport { InviteEmployeesComponent } from './invite-employees/invite-employees.component';\nimport { EmployeeProfileComponent } from './employee-profile/employee-profile.component';\nimport { ReviewEmployeesComponent } from './review-employees/review-employees.component';\nimport { NotificationsComponent } from './notifications/notifications.component';\nimport { JobAddEditComponent } from './job-add-edit/job-add-edit.component';\nimport { EmployerDetailsComponent } from './employer-details/employer-details.component'\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule.forChild([\n      { path: '', redirectTo: 'overview', pathMatch: 'full' },\n      { path: 'overview', component: JobOverviewComponent, pathMatch: 'full' },\n      { path:'job-management', component: JobManagementComponent, pathMatch: 'full' },\n      { path:'job-details/:id', component: JobAddEditComponent, pathMatch: 'full' },\n      { path:'buy-carrots', component: BuyCarrotsComponent, pathMatch: 'full' },\n      { path:'farm-carrots', component: FarmCarrotsComponent, pathMatch: 'full' },\n      { path:'employee-management', component: EmployeeManagementComponent, pathMatch: 'full' },\n      { path:'account-settings', component: AccountSettingsComponent, pathMatch: 'full' },\n      { path:'invite-employees', component: InviteEmployeesComponent, pathMatch: 'full' },\n      { path:'employee-profile/:id', component: EmployeeProfileComponent, pathMatch: 'full' },\n      { path:'review-employees', component: ReviewEmployeesComponent, pathMatch: 'full' },\n      { path:'notifications', component: NotificationsComponent, pathMatch: 'full' },\n      { path:'employer-details/:id', component: EmployerDetailsComponent, pathMatch: 'full' },\n      { path:'invite-employees/:jobId', component: InviteEmployeesComponent, pathMatch: 'full' }\n    ])\n  ],\n  exports:[RouterModule],\n  declarations: [JobOverviewComponent, JobManagementComponent, EmployeeManagementComponent, BuyCarrotsComponent, FarmCarrotsComponent, JobComponent, AccountSettingsComponent, InviteEmployeesComponent, EmployeeProfileComponent, ReviewEmployeesComponent, NotificationsComponent, JobAddEditComponent, EmployerDetailsComponent],\n  providers:[BuyCarrotsService]\n})\nexport class EmployerModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/employer/employer.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/employer/farm-carrots/farm-carrots.component.css\n// module id = ./src/app/employer/farm-carrots/farm-carrots.component.css\n// module chunks = employer.module","module.exports = \"<div class=\\\"content\\\">\\n  <div class=\\\"clearfix\\\"></div>\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"content-wrap\\\">\\n      <div class=\\\"align-center\\\">\\n        <img class=\\\"left20\\\" height=\\\"60\\\" length=\\\"60\\\" src=\\\"assets/img/carrot.png\\\">\\n        <h2>Farm Carrots</h2>\\n        <p>You can farm carrots by helping Job bunnies complete simple tasks to make</p>\\n        <p>hiring great again</p>\\n      </div>\\n      <br>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n          <div class=\\\"panel pad20 align-center\\\">\\n            <i class=\\\"fa fa-3x fa-gift\\\"></i>\\n            <div class=\\\"large strong\\\">Send a gift</div>\\n            <br>\\n            <br>\\n            <p class=\\\"strong\\\">Do you have partner companies that you are in business with?</p>\\n            <br>\\n            <p>Let us send them 10 carrots complimentary on us and you will get 10 carrots in return.</p>\\n            <br>\\n            <p>Everybody wins</p>\\n            <br>\\n            <button class=\\\"btn btn-orange\\\" (click)=\\\"sendGift()\\\" >Send Gift</button>\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n          <div class=\\\"panel pad20 align-center\\\">\\n            <i class=\\\"fa fa-3x fa-star\\\"></i>\\n            <div class=\\\"large strong\\\">Review employees</div>\\n            <p class=\\\"muted\\\">( only for shortlisted employees )</p>\\n            <br>\\n            <p class=\\\"strong\\\">Have an employee that you would like to commend or blacklist?</p>\\n            <br>\\n            <p>For each commend, neutral or blacklist, you get 0.5 carrots in return.</p>\\n            <br>\\n            <p>Help us make hiring more transparent for all recruiters alike!</p>\\n            <br>\\n            <button class=\\\"btn btn-orange\\\">Review Employees</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/employer/farm-carrots/farm-carrots.component.html\n// module id = ./src/app/employer/farm-carrots/farm-carrots.component.html\n// module chunks = employer.module","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-farm-carrots',\n  templateUrl: './farm-carrots.component.html',\n  styleUrls: ['./farm-carrots.component.css']\n})\nexport class FarmCarrotsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n  sendGift() {\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/employer/farm-carrots/farm-carrots.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/employer/invite-employees/invite-employees.component.css\n// module id = ./src/app/employer/invite-employees/invite-employees.component.css\n// module chunks = employer.module","module.exports = \"<div class=\\\"content\\\">\\n  <div class=\\\"clearfix\\\"></div>\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"content-wrap\\\">\\n      <div class=\\\"panel pad10\\\">\\n        <span class=\\\"large strong\\\">\\n          <span>Invite Employees for Job : test</span>\\n          <span> @ West test</span>\\n          <br>\\n        </span>\\n        <p>Job ID: 5a76ca0afe657000143c15d3</p>\\n        <hr>{{employeesList}}\\n        <div *ngFor=\\\"let emp of employeesList\\\">\\n          <a href=\\\"/employer/workers/5a5db124a17df86089392b05?jobId=5a76ca0afe657000143c15d3\\\"></a>\\n          <div class=\\\"row pad20\\\">\\n            <a href=\\\"/employer/workers/5a5db124a17df86089392b05?jobId=5a76ca0afe657000143c15d3\\\">\\n              <div class=\\\"col-md-2\\\">\\n                <div class=\\\"align-center\\\">\\n                  <img class=\\\"img-fit img-circle\\\" [src]=\\\"emp['profilePic'] || '/assets/img/logo.png'\\\" height=\\\"100\\\" width=\\\"100\\\">\\n                </div>\\n              </div>\\n            </a>\\n            <div class=\\\"col-md-10\\\">\\n              <a href=\\\"/employer/workers/5a5db124a17df86089392b05?jobId=5a76ca0afe657000143c15d3\\\"></a>\\n              <div class=\\\"row\\\">\\n                <a href=\\\"/employer/workers/5a5db124a17df86089392b05?jobId=5a76ca0afe657000143c15d3\\\">\\n                  <div class=\\\"col-md-3\\\">\\n                    <div class=\\\"strong capitalize black\\\">{{emp['first name'] + ' '+ emp['last name']}}</div>\\n                    <p class=\\\"green strong\\\">${{emp['salary']}}</p>\\n                    <p class=\\\"strong black\\\">{{emp['gender']}}</p>\\n                  </div>\\n                  <div class=\\\"col-md-2\\\">\\n                    <strong class=\\\"gray\\\">EXPERIENCE</strong>\\n                    <p class=\\\"strong black\\\">2 years</p>\\n                  </div>\\n                  <div class=\\\"col-md-3\\\">\\n                    <strong class=\\\"gray\\\">LANGUAGE</strong>\\n                    <p class=\\\"strong black\\\">{{emp['languages'].join(',')}}</p>\\n                  </div>\\n                  <div class=\\\"col-md-2\\\">\\n                    <strong class=\\\"gray\\\">PERSONALITY</strong>\\n                    <p class=\\\"strong black\\\"></p>\\n                    <p class=\\\"strong black\\\"></p>\\n                  </div>\\n                </a>\\n                <div class=\\\"col-md-2\\\">\\n                  <a href=\\\"/employer/workers/5a5db124a17df86089392b05?jobId=5a76ca0afe657000143c15d3\\\"></a>\\n                  <div class=\\\"align-center\\\">\\n                    <a href=\\\"/employer/workers/5a5db124a17df86089392b05?jobId=5a76ca0afe657000143c15d3\\\"></a>\\n                    <a class=\\\"btn btn-blue btn-block\\\" href=\\\"/api/matches/update/5a76ca6da17df86089e47c0c?matchStatus=shortlisted\\\">Shortlist</a>\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n      </div>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/employer/invite-employees/invite-employees.component.html\n// module id = ./src/app/employer/invite-employees/invite-employees.component.html\n// module chunks = employer.module","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { CommonServiceService } from '../../common/common-service.service';\nimport { Observable } from 'rxjs/Observable';\n\n@Component({\n  selector: 'app-invite-employees',\n  templateUrl: './invite-employees.component.html',\n  styleUrls: ['./invite-employees.component.css']\n})\nexport class InviteEmployeesComponent implements OnInit {\n  private jobId : string;\n  private employeesList : Array<object> = [];\n  constructor(private route: ActivatedRoute, private commonServiceService: CommonServiceService) {\n    this.route.params.subscribe( params => this.jobId = params.jobId );\n      let self = this;\n      if(this.jobId){\n      this.commonServiceService.get('/employer/employees/invite/'+this.jobId)\n      .map(res => res.json())\n      .catch(this.handleError)\n      .subscribe(function(res){\n        console.log(res);\n        this.employeesList = res['workers'];\n      });\n    }\n  }\n\n  handleError(error: Response | any) {\n    const body = JSON.parse(JSON.stringify(error)) || '';\n    return Observable.throw(body);\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/employer/invite-employees/invite-employees.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/employer/job-add-edit/job-add-edit.component.css\n// module id = ./src/app/employer/job-add-edit/job-add-edit.component.css\n// module chunks = employer.module","module.exports = \"\\n <div class=\\\"content\\\">\\n    <div class=\\\"clearfix\\\"></div>\\n    <p>Last updated: {{jobData[\\\"updatedAt\\\"] | date}}</p>\\n    <div class=\\\"card pad20\\\">\\n        <form class=\\\"form-horizontal\\\" method=\\\"post\\\" enctype=\\\"multipart/form-data\\\">\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label col-sm-2 small\\\">COVER IMAGE</label>\\n                <div class=\\\"col-sm-10\\\">\\n                    <input class=\\\"form-control\\\" (change)=\\\"readFile($event)\\\" type=\\\"file\\\" name=\\\"coverImage\\\">\\n                </div>\\n                <br>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label col-sm-2 small\\\">Company Photo</label>\\n                <div class=\\\"col-sm-10\\\">\\n                    <input class=\\\"form-control\\\" (change)=\\\"readFileCompany($event)\\\" type=\\\"file\\\" name=\\\"coverImage\\\">\\n                </div>\\n                <br>\\n            </div>\\n            \\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label col-sm-2 small\\\">JOB TITLE</label>\\n                <div class=\\\"col-sm-10\\\">\\n                    <input class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"jobTitle\\\" name=\\\"jobTitle\\\" placeholder=\\\"Enter job title\\\"  value=\\\"Sales Executive\\\" required>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label col-sm-2 small\\\">NUMBER OF HIRES</label>\\n                <div class=\\\"col-sm-10\\\">\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" [(ngModel)]=\\\"requiredNumber\\\" placeholder=\\\"How many people do you need to hire ?\\\" name=\\\"requiredNumber\\\" value=\\\"1\\\" required=\\\"\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label col-sm-2 small\\\">JOB TYPE</label>\\n                <div class=\\\"col-sm-10\\\">\\n                    <select class=\\\"form-control\\\" name=\\\"jobType\\\" [(ngModel)]='jobType' id=\\\"job-type\\\" required=\\\"\\\">\\n                        <option value=\\\"Full-time\\\" selected=\\\"\\\">Full-time</option>\\n                        <option value=\\\"Part-time\\\">Part-time</option>\\n                    </select>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label col-sm-2 small\\\">INDUSTRY</label><span></span>\\n                <div class=\\\"col-sm-10\\\">\\n                    <select class=\\\"form-control\\\" name=\\\"jobIndustry\\\" [(ngModel)]='jobIndustry' id=\\\"job-industry\\\" required=\\\"\\\">\\n                        <option value=\\\"Accounting / Finance\\\">Accounting / Finance</option>\\n                        <option value=\\\"Admin / HR\\\">Admin / HR</option>\\n                        <option value=\\\"Sales / Marketing\\\" selected=\\\"\\\">Sales / Marketing</option>\\n                        <option value=\\\"Arts Design Media\\\">Arts Design Media</option>\\n                        <option value=\\\"Computer / Technology\\\">Computer / Technology</option>\\n                        <option value=\\\"Training and education\\\">Training and education</option>\\n                        <option value=\\\"Engineering\\\">Engineering</option>\\n                        <option value=\\\"Service / Logistics\\\">Service / Logistics</option>\\n                    </select>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label col-sm-2 small\\\">SALARY TYPE</label>\\n                <div class=\\\"col-sm-10\\\">\\n                    <select class=\\\"form-control\\\" name=\\\"salaryType\\\" [(ngModel)]='salaryType' required=\\\"\\\">\\n                        <option value=\\\"Per Hour\\\">Per Hour</option>\\n                        <option value=\\\"Per Month\\\" selected=\\\"\\\">Per Month</option>\\n                        <option value=\\\"Per Project\\\">Per Project</option>\\n                    </select>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label col-sm-2 small\\\">SALARY</label>\\n                <div class=\\\"col-sm-10\\\">\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" placeholder=\\\"How much are you willing to pay?\\\" name=\\\"salary\\\" [(ngModel)]='salary' value=\\\"2000\\\" required=\\\"\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label col-sm-2 small\\\">WORKING PERIOD</label>\\n                <div class=\\\"col-sm-5\\\"><small class=\\\"strong\\\">START DATE</small>\\n                    <div class=\\\"input-group datepicker\\\">\\n                        <input type=\\\"date\\\" name=\\\"startDate\\\" id=\\\"start-date\\\" [(ngModel)]='startDate' value=\\\"2018-01-24\\\" required=\\\"\\\">\\n                    </div>\\n                </div>\\n                <div class=\\\"col-sm-5\\\" id=\\\"end-date-wrapper\\\" style=\\\"display: none;\\\"><small class=\\\"strong\\\">END DATE</small>\\n                    <div class=\\\"input-group datepicker\\\">\\n                        <input type=\\\"date\\\" name=\\\"endDate\\\" id=\\\"end-date\\\" [(ngModel)]='endDate'>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label col-sm-2 small\\\">WORKING DAYS</label>\\n                <div class=\\\"col-sm-10\\\">\\n                    <select class=\\\"form-control\\\" name=\\\"workPeriod\\\" [(ngModel)]='workPeriod' required=\\\"\\\">\\n                        <option value=\\\"Weekdays\\\">Weekdays</option>\\n                        <option value=\\\"Weekends\\\">Weekends</option>\\n                        <option value=\\\"Both weekdays and weekends\\\" selected=\\\"\\\">Both weekdays and weekends</option>\\n                    </select>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\" id=\\\"total-hours-wrap\\\" style=\\\"display: none;\\\">\\n                <label class=\\\"control-label col-sm-2 small\\\">TOTAL HOURS</label>\\n                <div class=\\\"col-sm-10\\\">\\n                    <input class=\\\"form-control\\\" type=\\\"number\\\" placeholder=\\\"How many manhours total?\\\" id=\\\"total-hours\\\" [(ngModel)]='totalHours' name=\\\"totalHours\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\" id=\\\"working-hours-wrap\\\">\\n                <label class=\\\"control-label col-sm-2 small strong\\\">START TIMING</label>\\n                <div class=\\\"col-sm-4\\\">\\n                  <div class=\\\"input-group clockpicker\\\" (click)=\\\"openstartTime()\\\">\\n                    <input type=\\\"text\\\" value=\\\"{{startTime}}\\\">\\n                    <span class=\\\"input-group-addon\\\">\\n                      <span class=\\\"glyphicon glyphicon-time\\\"></span>\\n                    </span>\\n                  </div>\\n                </div>\\n                <label class=\\\"control-label col-sm-2 small strong\\\">END TIMING</label>\\n                <div class=\\\"col-sm-4\\\">\\n                  <div class=\\\"input-group clockpicker\\\" (click)=\\\"openendTime()\\\">\\n                    <input type=\\\"text\\\" value=\\\"{{endTime}}\\\">\\n                    <span class=\\\"input-group-addon\\\">\\n                          <span class=\\\"glyphicon glyphicon-time\\\"></span>\\n                    </span>\\n                  </div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label col-sm-2 small\\\">EXPIRATION DATE OF JOB</label>\\n                <div class=\\\"col-sm-10\\\">\\n                    <select class=\\\"form-control\\\" name=\\\"jobExpiration\\\" id=\\\"job-expiration\\\" [(ngModel)]='jobExpiration' required=\\\"\\\">\\n                        <option value=\\\"At the start of working period\\\" selected=\\\"\\\">At the start of working period</option>\\n                        <option value=\\\"At the end of working period\\\">At the end of working period</option>\\n                        <option value=\\\"After 2 months\\\">After 2 months</option>\\n                    </select>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label col-sm-2 small\\\">LOCATION OF WORK</label> \\n                <div class=\\\"col-sm-10\\\">\\n                    <input class=\\\"form-control\\\" type=\\\"text\\\" placeholder=\\\"Work location\\\" name=\\\"location\\\" [(ngModel)]='location' value=\\\"JCUBE Mall\\\" required=\\\"\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label col-sm-2 small\\\">LOCATION REGION</label>\\n                <div class=\\\"col-sm-10\\\">\\n                    <select class=\\\"form-control\\\" name=\\\"workRegion\\\" [(ngModel)]='workRegion' required=\\\"\\\">\\n                        <option value=\\\"North\\\">North</option>\\n                        <option value=\\\"West\\\" selected=\\\"\\\">West</option>\\n                        <option value=\\\"East\\\">East</option>\\n                        <option value=\\\"Central\\\">Central</option>\\n                        <option value=\\\"Central Business District\\\">Central Business District</option>\\n                    </select>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label col-sm-2 small strong\\\">BACKGROUND OF JOB</label>\\n                <div class=\\\"col-sm-10\\\">\\n                    <textarea class=\\\"form-control\\\" rows=\\\"5\\\" placeholder=\\\"Give a description of what your company does or a message to attract employees\\\" name=\\\"description\\\" [(ngModel)]='description' required=\\\"\\\">Help company to bring in achieve sales targets month on month</textarea>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label col-sm-2 small strong\\\">RESPONSIBILITIES</label>\\n                <div class=\\\"col-sm-10\\\">\\n                    <textarea class=\\\"form-control\\\" rows=\\\"5\\\" placeholder=\\\"What are your employees expected to do ?\\\" [(ngModel)]='jobRole' name=\\\"jobRole\\\"></textarea>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label col-sm-2 small strong\\\">REQUIREMENTS</label>\\n                <div class=\\\"col-sm-10\\\">\\n                    <textarea class=\\\"form-control\\\" rows=\\\"5\\\" placeholder=\\\"What basic requirements should your employee have ?\\\" [(ngModel)]='requirement' name=\\\"requirement\\\">Requirements</textarea>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label col-sm-2 small\\\">ARE YOU EMPLOYING FOR YOURSELF?</label>\\n                <div class=\\\"col-sm-10\\\">\\n                    <select class=\\\"form-control\\\" name=\\\"selfEmployer\\\" [(ngModel)]='selfEmployer' required=\\\"\\\">\\n                        <option value=\\\"true\\\">Yes</option>\\n                        <option value=\\\"false\\\" selected=\\\"\\\">No</option>\\n                    </select>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label col-sm-2 small strong\\\">COMPANY NAME</label>\\n                <div class=\\\"col-sm-10\\\">\\n                    <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"companyName\\\" [(ngModel)]='companyName' value=\\\"Jobbunny\\\" required=\\\"\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label col-sm-2 small strong\\\">COMPANY WEBSITE</label>\\n                <div class=\\\"col-sm-10\\\">\\n                    <input class=\\\"form-control\\\" type=\\\"url\\\" name=\\\"companyWebsite\\\" [(ngModel)]='companyWebsite' value=\\\"Https://www.jobbunny.com\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label col-sm-2 small strong\\\">RECRUITER NAME</label>\\n                <div class=\\\"col-sm-10\\\">\\n                    <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"employerName\\\" [(ngModel)]='employerName' value=\\\"Gary\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"control-label col-sm-2 small strong\\\">RECRUITER HANDPHONE</label>\\n                <div class=\\\"col-sm-10\\\">\\n                    <input class=\\\"form-control\\\" type=\\\"text\\\"  name=\\\"employerPhone\\\" [(ngModel)]='employerPhone' value=\\\"82330317\\\">\\n                </div>\\n            </div>\\n            <button class=\\\"btn-lg btn-warning pull-right\\\" (click)=\\\"updateJobPost()\\\">Save updates</button>\\n        </form>\\n        <br>\\n        <br>\\n    </div>\\n  </div>  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/employer/job-add-edit/job-add-edit.component.html\n// module id = ./src/app/employer/job-add-edit/job-add-edit.component.html\n// module chunks = employer.module","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../user-service.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { ToasterModule, ToasterContainerComponent, ToasterService } from '../../../../node_modules/angular5-toaster/angular5-toaster';\nimport { AmazingTimePickerService } from 'amazing-time-picker'; // this line you need\n\n@Component({\n  selector: 'app-job-add-edit',\n  templateUrl: './job-add-edit.component.html',\n  styleUrls: ['./job-add-edit.component.css']\n})\nexport class JobAddEditComponent implements OnInit {\n  public jobTitle = '';\n  public requiredNumber = '';\n  public jobType = '';\n  public jobIndustry = '';\n  public salaryType = '';\n  public salary = '';\n  public startDate = '';\n  public endDate = '';\n  public workPeriod = '';\n  public totalHours = '';\n  public jobExpiration = '';\n  public location = '';\n  public workRegion = '';\n  public description = '';\n  public jobRole = '';\n  public requirement = '';\n  public selfEmployer = '';\n  public companyName = '';\n  public companyWebsite = '';\n  public employerName = '';\n  public employerPhone = '';\n  public startTime = '';\n  public endTime = '';\n  public coverImage = '';\n  public companyImage = '';\n  public userId:any;\n  public jobData = {};\n\n  constructor(public userService: UserService,private route: ActivatedRoute,public atp: AmazingTimePickerService,public toasterService: ToasterService) {\n      this.route.params.subscribe((params) => {\n      this.userId = params['id'];\n   });\n    this.userService.getEmployerDetails(this.userId).subscribe(res => {\n     this.jobData = res.job;\n     this.setValues(this.jobData);\n      \n    }, err => {\n      console.log(\"err\", err)\n    });\n    \n    \n   }\n\n  ngOnInit() {\n  }\n  setValues(jobData){\n    this.jobTitle = this.jobData[\"jobTitle\"];\n    this.requiredNumber = this.jobData[\"requiredNumber\"];\n    this.jobType = this.jobData[\"jobType\"];\n    this.jobIndustry = this.jobData[\"jobIndustry\"];\n    this.salaryType = this.jobData[\"salaryType\"];\n    this.salary = this.jobData[\"salary\"];\n    this.startDate = this.jobData[\"startDate\"];\n    this.endDate = this.jobData[\"endDate\"];\n    this.workPeriod = this.jobData[\"workPeriod\"];\n    this.totalHours = this.jobData[\"totalHours\"];\n    this.jobExpiration = this.jobData[\"jobExpiration\"];\n    this.location = this.jobData[\"location\"];\n    this.workRegion = this.jobData[\"workRegion\"];\n    this.description = this.jobData[\"description\"];\n    this.jobRole = this.jobData[\"jobRole\"];\n    this.requirement = this.jobData[\"requirement\"];\n    this.selfEmployer = this.jobData[\"selfEmployer\"];\n    this.companyName = this.jobData[\"companyName\"];\n    this.companyWebsite = this.jobData[\"companyWebsite\"];\n    this.employerName = this.jobData[\"employerName\"];\n    this.employerPhone = this.jobData[\"employerPhone\"];\n    this.startTime = this.jobData[\"startTime\"];\n    this.endTime = this.jobData[\"endTime\"];\n  }\n  updateJobPost(){\n    console.log(\"cover image\",this.coverImage)\n    let form = new FormData();\n    form.append(\"jobTitle\", this.jobTitle)\n    form.append(\"jobType\", this.jobType)\n    form.append(\"jobIndustry\", this.jobIndustry)\n    form.append(\"salaryType\", this.salaryType)\n    form.append(\"salary\", this.salary)\n    form.append(\"startDate\", this.startDate)\n    form.append(\"startTime\", this.startTime)\n    form.append(\"endTime\", this.endTime)\n    form.append(\"endDate\", this.endDate)\n    form.append(\"totalHours\", this.totalHours)\n    form.append(\"jobExpiration\", this.jobExpiration)\n    form.append(\"requiredNumber\", this.requiredNumber)\n    form.append(\"workPeriod\", this.workPeriod)\n    form.append(\"workRegion\", this.workRegion)\n    form.append(\"location\", this.location)\n    form.append(\"description\", this.description)\n    form.append(\"jobRole\", this.jobRole)\n    form.append(\"requirement\", this.requirement)\n    form.append(\"selfEmployer\", this.selfEmployer)\n    form.append(\"companyName\", this.companyName)\n    form.append(\"companyWebsite\", this.companyWebsite)\n    form.append(\"employerName\", this.employerName)\n    form.append(\"employerPhone\", this.employerPhone)\n   form.append(\"coverImage\", this.coverImage)\n    this.userService.updateJobPost(this.jobData[\"_id\"],form).subscribe(res => {\n      return this.toasterService.pop('success', 'Success', 'Updated Successfully done');\n    }, err => {\n      return this.toasterService.pop('error', 'Error', err.message);\n    }); \n  }\n  openstartTime() {\n    console.log(\"asdasd\")\n    const amazingTimePicker = this.atp.open();\n    amazingTimePicker.afterClose().subscribe(time => {\n      this.startTime = time;\n\n    });\n  }\n  openendTime() {\n    const amazingTimePickers = this.atp.open();\n    amazingTimePickers.afterClose().subscribe(time => {\n      this.endTime = time;\n\n    });\n  }\n  readFile(event) {\n    this.coverImage = event.target.value;\n  }\n  readFileCompany(event){\n    this.companyImage = event.target.value;\n    console.log(\"companyImage\",this.companyImage)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/employer/job-add-edit/job-add-edit.component.ts","module.exports = \".row .col-md-3:first-child{\\n    clear: both;\\n}\\n\\n.row {\\n    margin-right: -15px;\\n    margin-left: -15px;\\n}\\n\\n.active{\\n    padding: 7% 7%;\\n    background: #ffc500;\\n    color: #fff;\\n    word-break:break-word;\\n}\\n\\n.active .gray {\\n    color:#fff;\\n}\\n\\n.content{\\n    padding: 30px 15px;\\n    min-height: calc(100% - 123px);\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/employer/job-management/job-management.component.css\n// module id = ./src/app/employer/job-management/job-management.component.css\n// module chunks = employer.module","module.exports = \"<div class=\\\"content\\\" [hidden]=\\\"!jobListing\\\">\\n  <div class=\\\"clearfix\\\"></div>\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"content-wrap\\\">\\n      <div class=\\\"panel pad10\\\">\\n        <p class=\\\"large strong\\\">Job Management</p>\\n        <div class=\\\"filter\\\">\\n          <span></span>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-3\\\">\\n            <p class=\\\"strong\\\">{{jobs ? jobs.length : 0}} matches </p>\\n          </div>\\n          <div class=\\\"col-md-9\\\">\\n            <div class=\\\"pull-right\\\">\\n              <a class=\\\"dropdown-toggle\\\" data-toggle=\\\"collapse\\\" aria-expanded=\\\"\\\">\\n                <i class=\\\"fa fa-filter\\\"></i>\\n                <span>FILTER</span>\\n              </a>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"open in\\\" id=\\\"filters\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-2\\\">\\n              <strong>STATUS</strong>\\n              <ul class=\\\"list-unstyled\\\">\\n                <li class=\\\"top10\\\" [ngClass]=\\\"{'active': filter['jobStatus'] && filter['jobStatus'] === 'open'}\\\" (click)=\\\"toggleFilter('jobStatus','open')\\\">\\n                  <a class=\\\"gray\\\">open</a>\\n                </li>\\n                <li class=\\\"top10\\\" [ngClass]=\\\"{'active': filter['jobStatus'] && filter['jobStatus'] === 'urgent'}\\\" (click)=\\\"toggleFilter('jobStatus','urgent')\\\">\\n                  <a class=\\\"gray\\\">urgent</a>\\n                </li>\\n                <li class=\\\"top10\\\" [ngClass]=\\\"{'active': filter['jobStatus'] && filter['jobStatus'] === 'completed'}\\\" (click)=\\\"toggleFilter('jobStatus','completed')\\\">\\n                  <a class=\\\"gray\\\">completed</a>\\n                </li>\\n              </ul>\\n            </div>\\n            <div class=\\\"col-md-2 clearfix filterType\\\">\\n              <strong>JOB TYPE</strong>\\n              <ul class=\\\"list-unstyled\\\">\\n                <li class=\\\"top10\\\" [ngClass]=\\\"{'active': filter['jobType'] && filter['jobType'] === 'Part-time'}\\\" (click)=\\\"toggleFilter('jobType','Part-time')\\\">\\n                  <a class=\\\"gray\\\">Part-time</a>\\n                </li>\\n                <li class=\\\"top10\\\" [ngClass]=\\\"{'active': filter['jobType'] && filter['jobType'] === 'Full-time'}\\\" (click)=\\\"toggleFilter('jobType','Full-time')\\\">\\n                  <a class=\\\"gray\\\">Full-time</a>\\n                </li>\\n              </ul>\\n            </div>\\n            <div class=\\\"col-md-2\\\" [hidden]=\\\"!filter['jobType']\\\">\\n              <strong>INDUSTRY</strong>\\n              <ul class=\\\"list-unstyled\\\" [hidden]=\\\"filter['jobType'] !== 'Part-time'\\\">\\n                <li class=\\\"top10\\\" [ngClass]=\\\"{'active': filter['jobIndustry'] && filter['jobIndustry'] === 'Events'}\\\" (click)=\\\"toggleFilter('jobIndustry','Events')\\\">\\n                  <a class=\\\"gray\\\">Events</a>\\n                </li>\\n                <li class=\\\"top10\\\" [ngClass]=\\\"{'active': filter['jobIndustry'] && filter['jobIndustry'] === 'Sales'}\\\" (click)=\\\"toggleFilter('jobIndustry','Sales')\\\">\\n                  <a class=\\\"gray\\\">Sales</a>\\n                </li>\\n                <li class=\\\"top10\\\" [ngClass]=\\\"{'active': filter['jobIndustry'] && filter['jobIndustry'] === 'Data Entry'}\\\" (click)=\\\"toggleFilter('jobIndustry','Data Entry')\\\">\\n                  <a class=\\\"gray\\\">Data Entry</a>\\n                </li>\\n                <li class=\\\"top10\\\" [ngClass]=\\\"{'active': filter['jobIndustry'] && filter['jobIndustry'] === 'Food & Beverage'}\\\" (click)=\\\"toggleFilter('jobIndustry','Food & Beverage')\\\">\\n                  <a class=\\\"gray\\\">Food & Beverage</a>\\n                </li>\\n                <li class=\\\"top10\\\" [ngClass]=\\\"{'active': filter['jobIndustry'] && filter['jobIndustry'] === 'Logistics'}\\\" (click)=\\\"toggleFilter('jobIndustry','Logistics')\\\">\\n                  <a class=\\\"gray\\\">Logistics</a>\\n                </li>\\n                <li class=\\\"top10\\\" [ngClass]=\\\"{'active': filter['jobIndustry'] && filter['jobIndustry'] === 'Retail'}\\\" (click)=\\\"toggleFilter('jobIndustry','Retail')\\\">\\n                  <a class=\\\"gray\\\">Retail</a>\\n                </li>\\n              </ul>\\n              <ul class=\\\"list-unstyled\\\" [hidden]=\\\"filter['jobType'] !== 'Full-time'\\\">\\n                <li class=\\\"top10\\\" [ngClass]=\\\"{'active': filter['jobIndustry'] && filter['jobIndustry'] === 'Accounting / Finance'}\\\" (click)=\\\"toggleFilter('jobIndustry','Accounting / Finance')\\\">\\n                  <a class=\\\"gray\\\">Accounting / Finance</a>\\n                </li>\\n                <li class=\\\"top10\\\" [ngClass]=\\\"{'active': filter['jobIndustry'] && filter['jobIndustry'] === 'Admin / HR'}\\\" (click)=\\\"toggleFilter('jobIndustry','Admin / HR')\\\">\\n                  <a class=\\\"gray\\\">Admin / HR</a>\\n                </li>\\n                <li class=\\\"top10\\\" [ngClass]=\\\"{'active': filter['jobIndustry'] && filter['jobIndustry'] === 'Sales / Marketing'}\\\" (click)=\\\"toggleFilter('jobIndustry','Sales / Marketing')\\\">\\n                  <a class=\\\"gray\\\">Sales / Marketing</a>\\n                </li>\\n                <li class=\\\"top10\\\" [ngClass]=\\\"{'active': filter['jobIndustry'] && filter['jobIndustry'] === 'Arts Design Media'}\\\" (click)=\\\"toggleFilter('jobIndustry','Arts Design Media')\\\">\\n                  <a class=\\\"gray\\\">Arts Design Media</a>\\n                </li>\\n                <li class=\\\"top10\\\" [ngClass]=\\\"{'active': filter['jobIndustry'] && filter['jobIndustry'] === 'Computer/Technology'}\\\" (click)=\\\"toggleFilter('jobIndustry','Computer/Technology')\\\">\\n                  <a class=\\\"gray\\\">Computer/Technology</a>\\n                </li>\\n                <li class=\\\"top10\\\" [ngClass]=\\\"{'active': filter['jobIndustry'] && filter['jobIndustry'] === 'Training & education'}\\\" (click)=\\\"toggleFilter('jobIndustry','Training & education')\\\">\\n                  <a class=\\\"gray\\\">Training & education</a>\\n                </li>\\n                <li class=\\\"top10\\\" [ngClass]=\\\"{'active': filter['jobIndustry'] && filter['jobIndustry'] === 'Engineering'}\\\" (click)=\\\"toggleFilter('jobIndustry','Engineering')\\\">\\n                  <a class=\\\"gray\\\">Engineering</a>\\n                </li>\\n                <li class=\\\"top10\\\" [ngClass]=\\\"{'active': filter['jobIndustry'] && filter['jobIndustry'] === 'Service / Logistics'}\\\" (click)=\\\"toggleFilter('jobIndustry','Service / Logistics')\\\">\\n                  <a class=\\\"gray\\\">Service / Logistics</a>\\n                </li>\\n              </ul>\\n            </div>\\n            <div class=\\\"col-md-2\\\">\\n              <strong>Date</strong>\\n              <ul class=\\\"list-unstyled\\\">\\n                <li class=\\\"top10\\\" [ngClass]=\\\"{'active': sort['createdAt'] && sort['createdAt'] === 'latest'}\\\" (click)=\\\"toggleSort('createdAt', 'latest')\\\">\\n                  <a class=\\\"gray\\\">latest</a>\\n                </li>\\n                <li class=\\\"top10\\\" [ngClass]=\\\"{'active': sort['createdAt'] && sort['createdAt'] === 'earliest'}\\\" (click)=\\\"toggleSort('createdAt', 'earliest')\\\">\\n                  <a class=\\\"gray\\\">earliest</a>\\n                </li>\\n              </ul>\\n            </div>\\n            <div class=\\\"col-md-2\\\">\\n              <strong>Carrots</strong>\\n              <ul class=\\\"list-unstyled\\\">\\n                <li class=\\\"top10\\\" [ngClass]=\\\"{'active': sort[''] && sort['Date'] === 'latest'}\\\" (click)=\\\"toggleSort('Date','latest')\\\">\\n                  <a class=\\\"gray\\\">most spent</a>\\n                </li>\\n                <li class=\\\"top10\\\" [ngClass]=\\\"{'active': sort['Date'] && sort['Date'] === 'earliest'}\\\" (click)=\\\"toggleSort('Date','earliest')\\\">\\n                  <a class=\\\"gray\\\">least spent</a>\\n                </li>\\n              </ul>\\n            </div>\\n          </div>\\n        </div>\\n        <a></a>\\n        <div class=\\\"pad10\\\">\\n          <a></a>\\n          <div *ngFor=\\\"let job of jobs;\\\">\\n            <hr>\\n            <div class=\\\"row\\\">\\n                 <!-- (click)=\\\"rowSelect(job)\\\" -->\\n                 \\n              <a [routerLink]=\\\"['./']\\\" [queryParams]=\\\"{ id:job._id }\\\">\\n                <div class=\\\"col-md-2\\\">\\n                  <div class=\\\"strong black capitalize\\\">{{job['companyName']}}</div>\\n                </div>\\n                <div class=\\\"col-md-3\\\">\\n                  <div class=\\\"strong capitalize black\\\">{{job['jobTitle']}}</div>\\n                  <span class=\\\"green\\\"> ${{job['salary']}} {{job['salaryType']}}</span>\\n                  <p class=\\\"black\\\">Date created: {{job['createdAt'] | date}}</p>\\n                </div>\\n                <div class=\\\"col-md-1\\\">\\n                  <h6 class=\\\"gray\\\">JOB ID</h6>\\n                  <span class=\\\"black\\\" style=\\\"word-wrap: break-word;\\\">{{job['_id']}}</span>\\n                </div>\\n                <div class=\\\"col-md-2\\\">\\n                  <h6 class=\\\"gray\\\">WORK START</h6>\\n                  <p class=\\\"black\\\">{{job['startDate'] | date}}</p>\\n                </div>\\n                <div class=\\\"col-md-2\\\">\\n                  <h6 class=\\\"gray\\\">FULFILMENT</h6>\\n                  <span class=\\\"black\\\">Required {{job['requiredNumber']}}</span>\\n                  <br>\\n                  <span class=\\\"black\\\">Shortlisted {{job['shortlisted'] ? job['shortlisted'].length : 0}}</span>\\n                </div>\\n              </a>\\n              <div class=\\\"col-md-2\\\">\\n                <a>\\n                  <strong class=\\\"pull-right badge-green\\\" [hidden]=\\\"job['jobStatus'] === 'urgent' || job['jobStatus'] === 'completed'\\\">Open</strong>\\n                  <strong class=\\\"pull-right badge-gray\\\" [hidden]=\\\"job['jobStatus'] !== 'completed'\\\">Completed</strong>\\n                  <strong class=\\\"pull-right badge-red\\\" [hidden]=\\\"job['jobStatus'] !== 'urgent'\\\">Urgent</strong>\\n                  <br>\\n                  <br>\\n                </a>\\n                <a class=\\\"pull-right top10\\\">Mark as {{job['jobStatus'] === 'open' ? 'completed' : 'open' }}</a>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-3\\\">\\n                <h6 class=\\\"gray\\\">Invited ({{job && job['invited'] ? job['invited'].length : 0 }})</h6>\\n                <span *ngFor=\\\"let invited of job['invited']; let i = index\\\" [attr.data-index]=\\\"i\\\">\\n                  <img *ngIf=\\\"i < 3\\\" [src]=\\\"invited['worker']['profilePic']||'assets/img/logo.png'\\\" height=\\\"30\\\" width=\\\"30\\\" title=\\\"{{applied['worker']['first name']}}\\\" class=\\\"img-circle\\\">\\n                </span>\\n              </div>\\n              <div class=\\\"col-md-3\\\">\\n                <h6 class=\\\"gray\\\">Applied ({{ job && job['applied'] ? job['applied'].length : 0}})</h6>\\n                <span *ngFor=\\\"let applied of job['applied']; let i = index\\\" [attr.data-index]=\\\"i\\\">\\n                  <img *ngIf=\\\"i < 3\\\" [src]=\\\"applied['worker']['profilePic']||'assets/img/logo.png'\\\" height=\\\"30\\\" width=\\\"30\\\" title=\\\"{{applied['worker']['first name']}}\\\" class=\\\"img-circle\\\">\\n                </span>\\n              </div>\\n              <div class=\\\"col-md-3\\\">\\n                <h6 class=\\\"gray\\\">Shortlisted ({{job && job['shortlisted'] ? job['shortlisted'].length : 0}})</h6>\\n                <span *ngFor=\\\"let shortlisted of job['shortlisted']; let i = index\\\" [attr.data-index]=\\\"i\\\">\\n                  <img *ngIf=\\\"i < 3\\\" [src]=\\\"shortlisted['worker']['profilePic']||'assets/img/logo.png'\\\" height=\\\"30\\\" width=\\\"30\\\" title=\\\"{{applied['worker']['first name']}}\\\" class=\\\"img-circle\\\">\\n                </span>\\n              </div>\\n              <div class=\\\"col-md-3\\\">\\n                <a class=\\\"btn btn-orange btn-block btn-warning\\\" [routerLink]=\\\"['../invite-employees', job['_id']]\\\">Invite more employees</a>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"content\\\" [hidden]=\\\"!viewJob\\\">\\n  <div class=\\\"clearfix\\\"></div>\\n  <div class=\\\"content-wrap\\\">\\n    <div class=\\\"panel\\\">\\n      <div class=\\\"pad20\\\">\\n        <p class=\\\"large strong capitalize\\\">Sales Executive\\n          <span class=\\\"left20\\\">\\n            <a [routerLink]=\\\"['../job-details',jobData._id]\\\">\\n              <i class=\\\"fa fa-edit small gray\\\"></i>\\n            </a>\\n            <a class=\\\"left20\\\" (click)=\\\"deleteJobPost(jobData._id)\\\" onclick=\\\"return confirm('delete now?');\\\">\\n              <i class=\\\"fa fa-trash small gray\\\"></i>\\n            </a>\\n          </span>\\n          <span class=\\\"left20\\\">\\n           <a class=\\\"small gray\\\" (click)=\\\"changeJobStatus(jobData._id,jobData.jobStatus)\\\">Mark as {{jobData['jobStatus'] === 'completed' ? 'open':'completed' }}</a>\\n          </span>\\n        </p>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-9\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-9\\\">\\n                <i class=\\\"fa fa-map-marker\\\"></i>\\n                <span>{{jobData['workRegion']}},{{jobData['location']}}</span>\\n                <br>\\n                <i class=\\\"fa fa-clock-o\\\"></i>\\n                <span>{{jobData['jobType']}},{{jobData['startTime']}} - {{jobData['endTime']}},{{jobData[\\\"workPeriod\\\"]}}</span>\\n                <br>\\n                <i class=\\\"fa fa-calendar\\\"></i>\\n               <span>Starts on {{jobData['startDate'] | date}}, Ends onInvalid date</span>\\n                <br>\\n                <img class=\\\"img-fit\\\" src=\\\"assets/img/carrot.png\\\" height=\\\"30\\\" widht=\\\"30\\\">\\n                <span>10 carrots spent successfully</span>\\n              </div>\\n              <div class=\\\"col-md-3\\\">\\n                <div class=\\\"pull-right medium green\\\"> ${{jobData[\\\"salary\\\"]}}/{{jobData[\\\"salaryType\\\"]}}</div>\\n              </div>\\n            </div>\\n            <h4>Job Description</h4>\\n            <p>{{ jobData[\\\"description\\\"] }}</p>\\n            <h4>Duties and Responsibilities</h4>\\n            <p>N/A</p>\\n            <h4>Requirements</h4>\\n            <p>Requirements</p>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-1\\\">\\n                <h5>\\n                  <i class=\\\"fa fa-3x fa-lightbulb-o\\\"></i>\\n                </h5>\\n              </div>\\n              <div class=\\\"col-md-8\\\">\\n                <h5 class=\\\"strong gray\\\">PRO-TIP</h5>\\n                <div>Not getting applications? you may not be highlighting the best points about working with your company. Be\\n                  more descriptive about pros of working in your company :)</div>\\n              </div>\\n              <div class=\\\"col-md-3\\\">\\n                <h1></h1>\\n                <a class=\\\"btn btn-orange btn-block\\\" href=\\\"/employer/workers/invite/5a685478d60e310014dab89b\\\">Invite Employees</a>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-3 border-left\\\">\\n            <div class=\\\"align-center bottom10\\\">\\n              <div class=\\\"medium strong\\\">JOBBUNNY</div>\\n              <br>\\n              <div class=\\\"pad20\\\">\\n                <img class=\\\"img-circle pull-left\\\" src=\\\"assets/img/logo.png\\\" height=\\\"40\\\" width=\\\"40\\\">\\n                <small class=\\\"strong top10 left10 pull-left\\\">Posted by Gary</small>\\n              </div>\\n            </div>\\n            <br>\\n            <div class=\\\"top20\\\">\\n              <div class=\\\"medium strong\\\">Job Post activity</div>\\n              <h6 class=\\\"gray\\\">Invited ( 0 )</h6>\\n              <h6 class=\\\"gray\\\">Applied ( 0 )</h6>\\n              <h6 class=\\\"gray\\\">Shortlisted ( 0 )</h6>\\n            </div>\\n            <br>\\n            <div class=\\\"align-center\\\">\\n              <a class=\\\"btn btn-blue btn-block\\\" href=\\\"\\\">Share to Group</a>\\n              <small class=\\\"strong\\\">Share to groups for more results</small>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/employer/job-management/job-management.component.html\n// module id = ./src/app/employer/job-management/job-management.component.html\n// module chunks = employer.module","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../user-service.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AmazingTimePickerService } from 'amazing-time-picker'; // this line you need\nimport { ToasterModule, ToasterContainerComponent, ToasterService } from '../../../../node_modules/angular5-toaster/angular5-toaster';\n\n@Component({\n  selector: 'app-job-management',\n  templateUrl: './job-management.component.html',\n  styleUrls: ['./job-management.component.css']\n})\nexport class JobManagementComponent implements OnInit {\n  public jobsList = [];\n  public jobs = [];\n  public filter: object = {};\n  public filterCount: number = 0;\n  public jobData = {};\n  public editJobPost: boolean = false;\n  public viewJob: boolean = false;\n  public jobListing: boolean = true;\n  public jobTitle = '';\n  public requiredNumber = '';\n  public jobType = '';\n  public jobIndustry = '';\n  public salaryType = '';\n  public salary = '';\n  public startDate = '';\n  public endDate = '';\n  public workPeriod = '';\n  public totalHours = '';\n  public jobExpiration = '';\n  public location = '';\n  public workRegion = '';\n  public description = '';\n  public jobRole = '';\n  public requirement = '';\n  public selfEmployer = '';\n  public companyName = '';\n  public companyWebsite = '';\n  public employerName = '';\n  public employerPhone = '';\n  public startTime = '';\n  public endTime = '';\n  public coverImage = '';\n  \n  \n\n  constructor(public userService: UserService, private route: ActivatedRoute, public atp: AmazingTimePickerService,public toasterService: ToasterService,private router: Router) {\n    this.route.queryParams.subscribe(queryParams => {\n     console.log(\"queryParams\",queryParams)\n     if(queryParams['id']){\n      this.userService.getEmployerDetails(queryParams['id']).subscribe(res => {\n        console.log(\"response\",res)\n        this.jobData = res.job;\n        \n      }, err => {\n        console.log(\"err\", err)\n      });\n      this.jobListing = false;\n    this.viewJob = true;\n    } else {\n      this.jobListing = true;\n      this.viewJob = false;\n    } \n      \n    });\n   }\n\n  ngOnInit() {\n    this.userService.getJobDetails('employer').subscribe(res => {\n      this.jobsList = res.jobs;\n      console.log(\"res\", this.jobsList)\n      this.route.queryParams.subscribe(queryParams => {\n        this.filter = JSON.parse(JSON.stringify(queryParams));\n        this.applyFilter();\n      });\n    }, err => {\n      console.log(\"err\", err)\n    });\n  }\n  toggleFilter(key, value) {\n    if (key === 'jobType' && this.filter['jobIndustry']) {\n      delete this.filter['jobIndustry'];\n      this.filterCount--;\n    }\n    if (this.filter[key] === value) {\n      delete this.filter[key];\n      this.filterCount--;\n    } else {\n      if (!this.filter[key]) {\n        this.filterCount++;\n      }\n      this.filter[key] = value;\n    }\n    this.applyFilter();\n  }\n  private applyFilter() {\n    var self = this;\n    if (Object.keys(this.filter).length === 0) {\n      self.jobs = Object.assign([], this.jobsList);\n      return;\n    }\n    this.jobs = this.jobsList.filter(function (job) {\n      for (var key in self.filter) {\n        if (self.filter[key] !== job[key]) {\n          return false\n        }\n      }\n      return true;\n    })\n  }\n  clearFilter() {\n    this.filter = {};\n    this.filterCount = 0;\n    this.jobs = Object.assign([], this.jobsList);\n  }\n  // rowSelect(rowData) {\n  //   console.log(\"rowData\", rowData)\n  //   this.jobListing = false;\n  //   this.viewJob = true;\n  //   this.jobData = rowData;\n  // }\n  // showEdit() {\n  //   console.log(\"hello\", this.jobData)\n  //   this.jobListing = false;\n  //   this.viewJob = false;\n  //   this.editJobPost = true;\n  //   this.jobTitle = this.jobData[\"jobTitle\"];\n  //   this.requiredNumber = this.jobData[\"requiredNumber\"];\n  //   this.jobType = this.jobData[\"jobType\"];\n  //   this.jobIndustry = this.jobData[\"jobIndustry\"];\n  //   this.salaryType = this.jobData[\"salaryType\"];\n  //   this.salary = this.jobData[\"salary\"];\n  //   this.startDate = this.jobData[\"startDate\"];\n  //   this.endDate = this.jobData[\"endDate\"];\n  //   this.workPeriod = this.jobData[\"workPeriod\"];\n  //   this.totalHours = this.jobData[\"totalHours\"];\n  //   this.jobExpiration = this.jobData[\"jobExpiration\"];\n  //   this.location = this.jobData[\"location\"];\n  //   this.workRegion = this.jobData[\"workRegion\"];\n  //   this.description = this.jobData[\"description\"];\n  //   this.jobRole = this.jobData[\"jobRole\"];\n  //   this.requirement = this.jobData[\"requirement\"];\n  //   this.selfEmployer = this.jobData[\"selfEmployer\"];\n  //   this.companyName = this.jobData[\"companyName\"];\n  //   this.companyWebsite = this.jobData[\"companyWebsite\"];\n  //   this.employerName = this.jobData[\"employerName\"];\n  //   this.employerPhone = this.jobData[\"employerPhone\"];\n  //   this.startTime = this.jobData[\"startTime\"];\n  //   this.endTime = this.jobData[\"endTime\"];\n  // }\n  sort(option) {\n    let order = 0;\n    if (option === 'Salary: Low to High') {\n      order = 1;\n    } else if (option === 'Salary: High to Low') {\n      order = -1;\n    }\n    if (order === 0) {\n      return this.applyFilter();\n    }\n    this.jobs.sort((a, b) => {\n      return order * (a['salary'] - b['salary']);\n    })\n  }\n  openstartTime() {\n    console.log(\"asdasd\")\n    const amazingTimePicker = this.atp.open();\n    amazingTimePicker.afterClose().subscribe(time => {\n      this.startTime = time;\n\n    });\n  }\n  openendTime() {\n    const amazingTimePickers = this.atp.open();\n    amazingTimePickers.afterClose().subscribe(time => {\n      this.endTime = time;\n\n    });\n  }\n  readFile(event) {\n    this.coverImage = event.target.value;\n  }\n  deleteJobPost(id){\n    this.userService.deleteJobPost(id).subscribe(res => {\n      this.router.navigate([\"employer/job-management\"])\n    return this.toasterService.pop('success', 'Success', res.message);\n\n   }, err => {\n      console.log(\"err\", err)\n      return this.toasterService.pop('success', 'Success', err);\n\n    });\n  }\n  changeJobStatus(id,status){\n    let statusChanged;\n    if(status == \"open\"){\n      statusChanged = \"completed\";\n    }\n    else{\n      statusChanged = \"open\";\n    }\n  this.userService.updateJobStatus(id,statusChanged).subscribe(res => {\n      this.router.navigate([\"employer/job-management\"])\n    return this.toasterService.pop('success', 'Success', res.message);\n\n   }, err => {\n      console.log(\"err\", err)\n      return this.toasterService.pop('success', 'Success', err);\n\n    });\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/employer/job-management/job-management.component.ts","module.exports = \"<div class=\\\"content\\\">\\n  <div class=\\\"clearfix\\\"></div>\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"content-wrap\\\">\\n      <div class=\\\"large strong\\\">Job Overview</div>\\n      <p>The status of your job posts</p>\\n      <div class=\\\"row tile_count\\\">\\n        <div class=\\\"col-md-3 col-xs-6\\\" [routerLink]=\\\"['../job-management']\\\" [queryParams]=\\\"{jobStatus :'open'}\\\">\\n          <a >\\n            <div class=\\\"panel dash-card-light-green\\\">\\n              <h3 class=\\\"strong\\\">{{jobCount[\\\"openJobsCount\\\"]}}</h3>\\n              <span>Open Jobs</span>\\n            </div>\\n          </a>\\n        </div>\\n        <div class=\\\"col-md-3 col-xs-6\\\" [routerLink]=\\\"['../job-management']\\\" [queryParams]=\\\"{jobStatus :'urgent'}\\\">\\n          <a >\\n            <div class=\\\"panel dash-card-red\\\">\\n              <h3 class=\\\"strong\\\">{{jobCount[\\\"urgentJobsCount\\\"]}}</h3>\\n              <span>Urgent Jobs</span>\\n            </div>\\n          </a>\\n        </div>\\n        <div class=\\\"col-md-3 col-xs-6\\\" [routerLink]=\\\"['../job-management']\\\" [queryParams]=\\\"{jobStatus :'completed'}\\\">\\n          <a >\\n            <div class=\\\"panel dash-card-gray\\\">\\n              <h3 class=\\\"strong\\\">{{jobCount[\\\"completedJobsCount\\\"]}}</h3>\\n              <span>Completed Jobs</span>\\n            </div>\\n          </a>\\n        </div>\\n        <div class=\\\"col-md-3 col-xs-6\\\">\\n          <a >\\n            <div class=\\\"panel dash-card-orange\\\">\\n              <h3 class=\\\"strong\\\">{{carrots['available']}}</h3>\\n              <span>Carrots Available</span>\\n              <br>\\n              <small class=\\\"strong\\\">{{carrots['pending']}} carrots in transit</small>\\n            </div>\\n          </a>\\n        </div>\\n      </div>\\n      <br>\\n      <div class=\\\"large strong\\\">Employee Overview</div>\\n      <p>The status of your employee activities</p>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-3 col-xs-6\\\" [routerLink]=\\\"['../employee-management']\\\" [queryParams]=\\\"{matchStatus : 'invited'}\\\">\\n          <a >\\n            <div class=\\\"dash-card-white panel\\\">\\n              <h3 class=\\\"strong\\\">{{jobCount[\\\"invitedWorkersCount\\\"]}}</h3>\\n              <div class=\\\"medium\\\">Invitations</div>\\n              <small class=\\\"strong\\\">sent</small>\\n            </div>\\n          </a>\\n        </div>\\n        <div class=\\\"col-md-3 col-xs-6\\\" [routerLink]=\\\"['../employee-management']\\\" [queryParams]=\\\"{matchStatus : 'applied'}\\\">\\n          <a >\\n            <div class=\\\"dash-card-white panel\\\">\\n              <h3 class=\\\"strong\\\">{{jobCount[\\\"acceptedWorkersCount\\\"]}}</h3>\\n              <div class=\\\"medium\\\">Applications</div>\\n              <small class=\\\"strong\\\">to be accepted</small>\\n            </div>\\n          </a>\\n        </div>\\n        <div class=\\\"col-md-3 col-xs-6\\\" [routerLink]=\\\"['../employee-management']\\\" [queryParams]=\\\"{matchStatus : 'shortlisted'}\\\">\\n          <a >\\n            <div class=\\\"dash-card-white panel\\\">\\n              <h3 class=\\\"strong\\\">{{jobCount[\\\"shortlistedWorkersCount\\\"]}}</h3>\\n              <div class=\\\"medium\\\">Shortlisted</div>\\n              <small class=\\\"strong\\\">claim 5 carrots back when you update your actions</small>\\n            </div>\\n          </a>\\n        </div>\\n        <div class=\\\"col-md-3 col-xs-6\\\">\\n          <a >\\n            <div class=\\\"dash-card-white panel\\\">\\n              <h3 class=\\\"strong\\\">{{jobCount[\\\"acceptedWorkersCount\\\"]}}</h3>\\n              <div class=\\\"medium\\\">Employed</div>\\n              <small class=\\\"strong\\\">successfully</small>\\n            </div>\\n          </a>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/employer/job-overview/job-overview.component.html\n// module id = ./src/app/employer/job-overview/job-overview.component.html\n// module chunks = employer.module","module.exports = \".panel {\\n  cursor: pointer; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/employer/job-overview/job-overview.component.scss\n// module id = ./src/app/employer/job-overview/job-overview.component.scss\n// module chunks = employer.module","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../user-service.service';\n\n@Component({\n  selector: 'app-job-overview',\n  templateUrl: './job-overview.component.html',\n  styleUrls: ['./job-overview.component.scss']\n})\nexport class JobOverviewComponent implements OnInit {\n  public jobCount :object = {};\n  public carrots : object = {};\n  constructor(public userService:UserService) { }\n\n  ngOnInit() {\n    this.userService.getDashboardDetail(\"employer\").subscribe(res => {\n     this.jobCount = res.jobCount;\n     console.log(\"res\",this.jobCount)\n    }, err => {\n      console.log(\"err\",err)\n    });\n    this.userService.userDetail.subscribe(user =>{\n      this.carrots = user['carrots'];\n    })\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/employer/job-overview/job-overview.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/employer/job/job.component.css\n// module id = ./src/app/employer/job/job.component.css\n// module chunks = employer.module","module.exports = \"<div class=\\\"content\\\">\\n  <div class=\\\"clearfix\\\"></div>\\n  <div class=\\\"content-wrap\\\">\\n    <div class=\\\"panel\\\">\\n      <div class=\\\"pad20\\\">\\n        <p class=\\\"large strong capitalize\\\">Sales Executive\\n          <span class=\\\"left20\\\">\\n            <a href=\\\"/employer/jobs/5a685478d60e310014dab89b/edit\\\">\\n              <i class=\\\"fa fa-edit small gray\\\"></i>\\n            </a>\\n            <a class=\\\"left20\\\" href=\\\"/api/jobs/delete/5a685478d60e310014dab89b\\\" onclick=\\\"return confirm('delete now?');\\\">\\n              <i class=\\\"fa fa-trash small gray\\\"></i>\\n            </a>\\n          </span>\\n          <span class=\\\"left20\\\">\\n            <a class=\\\"small gray\\\" href=\\\"/api/jobs/mark/5a685478d60e310014dab89b?status=completed\\\">Mark as completed</a>\\n          </span>\\n        </p>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-9\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-9\\\">\\n                <i class=\\\"fa fa-map-marker\\\"></i>\\n                <span>West, JCUBE Mall</span>\\n                <br>\\n                <i class=\\\"fa fa-clock-o\\\"></i>\\n                <span>Full-time, 09:30 - 18:30, Both weekdays and weekends</span>\\n                <br>\\n                <i class=\\\"fa fa-calendar\\\"></i>\\n                <span>Starts on 01/24/2018, Ends onInvalid date</span>\\n                <br>\\n                <img class=\\\"img-fit\\\" src=\\\"/img/carrot.png\\\" height=\\\"30\\\" widht=\\\"30\\\">\\n                <span>10 carrots spent successfully</span>\\n              </div>\\n              <div class=\\\"col-md-3\\\">\\n                <div class=\\\"pull-right medium green\\\"> $2000/Per Month</div>\\n              </div>\\n            </div>\\n            <h4>Job Description</h4>\\n            <p>Help company to bring in achieve sales targets month on month</p>\\n            <h4>Duties and Responsibilities</h4>\\n            <p>N/A</p>\\n            <h4>Requirements</h4>\\n            <p>Requirements</p>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-1\\\">\\n                <h5>\\n                  <i class=\\\"fa fa-3x fa-lightbulb-o\\\"></i>\\n                </h5>\\n              </div>\\n              <div class=\\\"col-md-8\\\">\\n                <h5 class=\\\"strong gray\\\">PRO-TIP</h5>\\n                <div>Not getting applications? you may not be highlighting the best points about working with your company. Be\\n                  more descriptive about pros of working in your company :)</div>\\n              </div>\\n              <div class=\\\"col-md-3\\\">\\n                <h1></h1>\\n                <a class=\\\"btn btn-orange btn-block\\\" href=\\\"/employer/workers/invite/5a685478d60e310014dab89b\\\">Invite Employees</a>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-3 border-left\\\">\\n            <div class=\\\"align-center bottom10\\\">\\n              <div class=\\\"medium strong\\\">JOBBUNNY</div>\\n              <br>\\n              <div class=\\\"pad20\\\">\\n                <img class=\\\"img-circle pull-left\\\" src=\\\"/img/logo.png\\\" height=\\\"40\\\" width=\\\"40\\\">\\n                <small class=\\\"strong top10 left10 pull-left\\\">Posted by Gary</small>\\n              </div>\\n            </div>\\n            <br>\\n            <div class=\\\"top20\\\">\\n              <div class=\\\"medium strong\\\">Job Post activity</div>\\n              <h6 class=\\\"gray\\\">Invited ( 0 )</h6>\\n              <h6 class=\\\"gray\\\">Applied ( 0 )</h6>\\n              <h6 class=\\\"gray\\\">Shortlisted ( 0 )</h6>\\n            </div>\\n            <br>\\n            <div class=\\\"align-center\\\">\\n              <a class=\\\"btn btn-blue btn-block\\\" href=\\\"\\\">Share to Group</a>\\n              <small class=\\\"strong\\\">Share to groups for more results</small>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/employer/job/job.component.html\n// module id = ./src/app/employer/job/job.component.html\n// module chunks = employer.module","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-job',\n  templateUrl: './job.component.html',\n  styleUrls: ['./job.component.css']\n})\nexport class JobComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/employer/job/job.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/employer/notifications/notifications.component.css\n// module id = ./src/app/employer/notifications/notifications.component.css\n// module chunks = employer.module","module.exports = \"<div class=\\\"content\\\">\\n  <div class=\\\"clearfix\\\"></div>\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"content-wrap\\\">\\n      <p class=\\\"large strong\\\">Notifications</p>\\n      <div class=\\\"panel pad10\\\">\\n        <a href=\\\"/employer/workers/5a5db124a17df86089392b05?notificationId=5a8fed2956c57f00144ce70a\\\">\\n          <i class=\\\"fa fa-bell green\\\"></i>\\n          <span> Gary Lim was invited to your job.</span>\\n        </a>\\n        <div class=\\\"pull-right\\\">\\n          <span>13 days ago</span>\\n        </div>\\n      </div>\\n      <div class=\\\"panel pad10\\\">\\n        <a href=\\\"/employer/workers/5a5db124a17df86089392b05?notificationId=5a8fed2456c57f00144ce709\\\">\\n          <i class=\\\"fa fa-bell green\\\"></i>\\n          <span> Gary Lim was invited to your job.</span>\\n        </a>\\n        <div class=\\\"pull-right\\\">\\n          <span>13 days ago</span>\\n        </div>\\n      </div>\\n      <div class=\\\"panel pad10\\\">\\n        <a href=\\\"/employer/workers/5a5db124a17df86089392b05?notificationId=5a8fed1756c57f00144ce708\\\">\\n          <i class=\\\"fa fa-bell green\\\"></i>\\n          <span> Gary Lim was invited to your job.</span>\\n        </a>\\n        <div class=\\\"pull-right\\\">\\n          <span>13 days ago</span>\\n        </div>\\n      </div>\\n      <div class=\\\"panel pad10\\\">\\n        <a href=\\\"/employer/workers/5a5db124a17df86089392b05?notificationId=5a8e96c328d07e0014c774ba\\\">\\n          <i class=\\\"fa fa-bell green\\\"></i>\\n          <span> Gary Lim was invited to your job.</span>\\n        </a>\\n        <div class=\\\"pull-right\\\">\\n          <span>14 days ago</span>\\n        </div>\\n      </div>\\n      <div class=\\\"panel pad10\\\">\\n        <a href=\\\"/employer/workers/5a5db124a17df86089392b05?notificationId=5a76cbf7fe657000143c15d7\\\">\\n          <i class=\\\"fa fa-bell green\\\"></i>\\n          <span> Gary Lim applied to your job.</span>\\n        </a>\\n        <div class=\\\"pull-right\\\">\\n          <span>a month ago</span>\\n        </div>\\n      </div>\\n      <div class=\\\"panel pad10\\\">\\n        <a href=\\\"/employer/workers/5a5db124a17df86089392b05?notificationId=5a76cab8fe657000143c15d6\\\">\\n          <i class=\\\"fa fa-bell green\\\"></i>\\n          <span> Gary Lim was invited to your job.</span>\\n        </a>\\n        <div class=\\\"pull-right\\\">\\n          <span>a month ago</span>\\n        </div>\\n      </div>\\n      <div class=\\\"panel pad10\\\">\\n        <a href=\\\"/employer/workers/5a5db124a17df86089392b05?notificationId=5a76ca87fe657000143c15d5\\\">\\n          <i class=\\\"fa fa-bell green\\\"></i>\\n          <span> Gary Lim was invited to your job.</span>\\n        </a>\\n        <div class=\\\"pull-right\\\">\\n          <span>a month ago</span>\\n        </div>\\n      </div>\\n      <div class=\\\"panel pad10\\\">\\n        <a href=\\\"/employer/workers/5a5db124a17df86089392b05?notificationId=5a76ca6dfe657000143c15d4\\\">\\n          <i class=\\\"fa fa-bell green\\\"></i>\\n          <span> Gary Lim applied to your job.</span>\\n        </a>\\n        <div class=\\\"pull-right\\\">\\n          <span>a month ago</span>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/employer/notifications/notifications.component.html\n// module id = ./src/app/employer/notifications/notifications.component.html\n// module chunks = employer.module","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-notifications',\n  templateUrl: './notifications.component.html',\n  styleUrls: ['./notifications.component.css']\n})\nexport class NotificationsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/employer/notifications/notifications.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/employer/review-employees/review-employees.component.css\n// module id = ./src/app/employer/review-employees/review-employees.component.css\n// module chunks = employer.module","module.exports = \"<p>\\n  review-employees works!\\n</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/employer/review-employees/review-employees.component.html\n// module id = ./src/app/employer/review-employees/review-employees.component.html\n// module chunks = employer.module","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-review-employees',\n  templateUrl: './review-employees.component.html',\n  styleUrls: ['./review-employees.component.css']\n})\nexport class ReviewEmployeesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/employer/review-employees/review-employees.component.ts"],"sourceRoot":"webpack:///"}